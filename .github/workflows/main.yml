name: CI Build

on:
  push:
    branches: [ main ]


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
    env:
      QUARKUS_JACOCO_REPORT_LOCATION: 'coverage'
      QUARKUS_JACOCO_FOOTER: 'httpbucket'
      QUARKUS_JACOCO_TITLE: 'httpbucket'
      QUARKUS_JACOCO_EXCLUDES: '**/SimpleHealthCheck.class'
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'

      - name: Get Gradle Version
        id: version-step
        run: |
          VERSION=$(grep 'version' build.gradle | cut -f 2 -d "'")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "REPO=$GITHUB_REPOSITORY" >> $GITHUB_ENV
          echo "OWNER=$GITHUB_REPOSITORY_OWNER" >> $GITHUB_ENV

      - name: Check if version is used
        run: |
          URL=$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/latest
          LATEST=$(curl --silent "$URL" | jq -r .name)
          if [ "$LATEST" == "$VERSION" ]; then
            echo "Version is used."
            exit 1
          fi

      - name: Generating self-signed certificate
        run: |
          openssl req \
            -newkey rsa:2048 \
            -new \
            -nodes \
            -x509 \
            -days 3650 \
            -keyout key.pem \
            -out cert.pem \
            -subj "/C=US/ST=SC/L=Hometown/O=IT/emailAddress=root@localhost/CN=localhost"

      - name: Build
        run: ./gradlew build --no-daemon -Dquarkus.package.type=native -Dquarkus.native.container-build=true

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.OWNER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: src/main/docker/Dockerfile.native-micro
          tags: |
            ${{ env.REPO }}:${{ env.VERSION }}
            ${{ env.REPO }}:latest

      - name: Creating GitHub Tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ env.VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Overwrite Coverage Theme
        run: |
          /bin/cp -rf helpers/coverage/* build/coverage/.

      - name: Publishing to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./build/coverage
          github_token: ${{ secrets.GITHUB_TOKEN }}
